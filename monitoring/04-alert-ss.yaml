apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kubemon-alertmanager
  labels: &Labels
    k8s-app: alertmanager
    app.kubernetes.io/name: kubemon
    app.kubernetes.io/component: alertmanager
spec:
  # Used to configure a stable network identity for the StatefulSet Pods 
  # e.g. pod_name.kubemon-alertmanager-operated.monitoring.svc:6783
  serviceName: "kubemon-alertmanager-operated"
  # To scale the number of Alertmanager replicas, you must add `â€”cluster.peer` addresses 
  # for any additional Alertmanager Pods in the `args` section of the `containers` spec. 
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  selector:
    matchLabels: *Labels
  template:
    metadata:
      labels: *Labels
    spec:
      serviceAccountName: alertmanager
      containers:
        - name: prometheus-alertmanager
          # The Alertmanager container image
          image: quay.io/prometheus/alertmanager:v0.16.0
          imagePullPolicy: Always
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path=/data
            - --web.listen-address=:9093
            - --web.route-prefix=/
            - --cluster.listen-address=$(POD_IP):6783
            - --cluster.peer=kubemon-alertmanager-0.kubemon-alertmanager-operated.monitoring.svc:6783
            - --cluster.peer=kubemon-alertmanager-1.kubemon-alertmanager-operated.monitoring.svc:6783
            - --log.level=debug
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          ports:
            # Configured for web access
            - containerPort: 9093
              name: http
            # Configured for communication over the mesh
            - containerPort: 6783
              name: mesh
          readinessProbe:
            httpGet:
              path: /#/status
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            # The ConfigMap containing `alertmanager.yml` will be mounted to `/etc/config`, using a Kubernetes Volume. 
            # To learn more about mounting ConfigMap data into a Volume, 
            # consult https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#populate-a-volume-with-data-stored-in-a-configmap
            - name: config-volume
              mountPath: /etc/config
            - name: kubemon-alertmanager-data
              mountPath: "/data"
              subPath: ""
          resources:
            # Resource limits of 50 MiB of memory and 10m of CPU. 
            # To learn more about resource limits and requests, and how to tune them, 
            # consult https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
            limits:
              cpu: 10m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: config-volume
          configMap:
            name: kubemon-alertmanager-config
        - name: kubemon-alertmanager-data
          emptyDir: {}