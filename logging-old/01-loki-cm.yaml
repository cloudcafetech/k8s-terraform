apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-cm
data:
  loki.yaml: |-
    auth_enabled: false
    
    server:
      http_listen_port: 3100
      grpc_listen_port: 9096
    
    ingester:
      lifecycler:
        address: 0.0.0.0
        ring:
          replication_factor: 1
          kvstore:
            store: inmemory
        final_sleep: "0s"
      wal:
        enabled: false    
      chunk_idle_period: 1h       
      max_chunk_age: 1h           
      chunk_target_size: 1048576  
      chunk_retain_period: 30s    
      max_transfer_retries: 0    
    
    schema_config:
      configs:
        - from: "2020-05-15"
          store: boltdb-shipper
          object_store: s3
          schema: v11
          index:
            period: 24h
            prefix: index_
    
    storage_config:
      aws:
        bucketnames: lokik8sminio
        endpoint: http://minio-svc.minio-store.svc.cluster.local:9000
        insecure: true
        s3: null
        region: null
        s3forcepathstyle: true
        access_key_id: admin
        secret_access_key: admin2675
      boltdb_shipper:
        active_index_directory: /data/loki/index
        cache_location: /data/loki/cache
        cache_ttl: 24h
        shared_store: s3
    
    compactor:
      compaction_interval: 5m
      shared_store: s3
      working_directory: /data/loki/boltdb-shipper-compactor
    
    limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_global_streams_per_user: 10000       # for error sending batch, Too Many Requests, Ingestion rate limit exceeded  
    
    chunk_store_config:
      max_look_back_period: 0s
    
    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s
    
    ruler:
      storage:
        type: local
        local:
          directory: /etc/loki/rules
      rule_path: /temp/loki/rules
      ring:
        kvstore:
          store: inmemory
      alertmanager_url: http://kubemon-alertmanager.monitoring.svc.cluster.local:9093
      enable_api: true
      enable_alertmanager_v2: true
    
    # If you would like to disable reporting, uncomment the following lines:
    #analytics:
    #  reporting_enabled: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubemon-loki-alert-config
  labels:
    app.kubernetes.io/name: kubemon
    app.kubernetes.io/component: prometheus
data:
  rules.yml: |-
    "groups":
    - name: apps-rules
      rules:
      - alert: AppsErrorlog
        expr: sum by (pod,namespace)(count_over_time({pod!=""}|~ "[Ee]rror"[1m])) >= 1
        for: 1m
        labels:
          severity: warning
          category: logs
        annotations:
          title: "Application error in logs"
          messages: "Found error in POD ({{ $labels.pod }}) in namespace ({{ $labels.namespace }}) is above 1 (current value: {{ $value }})"
      - alert: NoSuchHostError
        expr: sum by (pod,namespace)(count_over_time({pod !~ "(kubemon-alertmanager-0|kubemon-alertmanager-1|loki-0|loki-1)",namespace !~ "(logging|monitoring)"}|~ "no such host"[1m])) >= 1
        for: 1m
        labels:
          severity: warning
          category: logs
        annotations:
          title: "No Such Host Error"
          messages: "No Such Host error found in POD ({{ $labels.pod }}) in namespace ({{ $labels.namespace }}) is above 1 (current value: {{ $value }})"
      - alert: OfflinPODError
        expr: sum by (pod,namespace)(count_over_time({pod !~ "(kubemon-alertmanager-0|kubemon-alertmanager-1|loki-0|loki-1)",namespace !~ "(logging|monitoring)"}|~ "1 Offline"[1m])) >= 1
        for: 1m
        labels:
          severity: warning
          category: logs
        annotations:
          title: "Offline POD Error"
          messages: "Offline POD error found in POD ({{ $labels.pod }}) in namespace ({{ $labels.namespace }}) is above 1 (current value: {{ $value }})"          
