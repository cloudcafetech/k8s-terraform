# Global settings
#---------------------------------------------------------------------
global
    maxconn     20000
    log         /dev/log local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon
    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    mode                    http
    option                  httplog
    option                  dontlognull
    option http-server-close
    option redispatch
    option forwardfor       except 127.0.0.0/8
    retries                 3
    maxconn                 20000
    timeout http-request    10000ms
    timeout http-keep-alive 10000ms
    timeout check           10000ms
    timeout connect         40000ms
    timeout client          300000ms
    timeout server          300000ms
    timeout queue           50000ms

# Enable HAProxy stats
listen stats
    bind :9000
    stats uri /stats
    stats refresh 10000ms

# RKE2 Supervisor Server
frontend rke2_supervisor_frontend
    bind *:9345
    default_backend rke2_supervisor_backend
    mode tcp

backend rke2_supervisor_backend
    mode tcp
    balance roundrobin
    server      VMDNS1 VMIP1:9345 check
    server      VMDNS2 VMIP2:9345 check
    server      VMDNS3 VMIP3:9345 check

# RKE2 Kube API Server
frontend rke2_api_frontend
    bind *:6443
    default_backend rke2_api_backend
    mode tcp

backend rke2_api_backend
    mode tcp
    balance roundrobin
    server      VMDNS1 VMIP1:6443 check
    server      VMDNS2 VMIP2:6443 check
    server      VMDNS3 VMIP3:6443 check

# RKE2 Ingress - layer 4 tcp mode for each. Ingress Controller will handle layer 7.
frontend rke2_http_ingress_frontend
    bind :80
    default_backend rke2_http_ingress_backend
    mode http

backend rke2_http_ingress_backend
    balance roundrobin
    mode http
    server      VMDNS1 VMIP1:80 check
    server      VMDNS2 VMIP2:80 check
    server      VMDNS3 VMIP3:80 check

frontend rke2_https_ingress_frontend
    bind *:443
    default_backend rke2_https_ingress_backend
    mode tcp

backend rke2_https_ingress_backend
    mode tcp
    balance roundrobin
    server      VMDNS1 VMIP1:443 check
    server      VMDNS2 VMIP2:443 check
    server      VMDNS3 VMIP3:443 check